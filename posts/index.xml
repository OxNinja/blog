<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - 0xNinja - My blog</title><link>https://0xninja.fr/posts/</link><description>All Posts | 0xNinja - My blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 18 Jul 2022 19:00:00 +0000</lastBuildDate><atom:link href="https://0xninja.fr/posts/" rel="self" type="application/rss+xml"/><item><title>üèåÔ∏è BGGP3 - How to crash a famous JS engine for fun</title><link>https://0xninja.fr/bggp3/</link><pubDate>Mon, 18 Jul 2022 19:00:00 +0000</pubDate><author>0xNinja</author><guid>https://0xninja.fr/bggp3/</guid><description>So this summer - and it has been this for the past 2 years - the famous Binary Golfing Grand Prix took place online for it&amp;rsquo;s 3rd edition, and of course I decided to give it a try.
After getting to try my best at golfing binaries (see my golfing posts), I had to race this competition for fun and learn a lot about fuzzing.
What is fuzzing? Fuzzing a binary is like bruteforcing a binary&amp;rsquo;s input (cmd args, input file&amp;hellip;) in order to get an odd behaviour, a bug or even the holy crash.</description></item><item><title>üîé xchg rax, rax</title><link>https://0xninja.fr/xchg-rax-rax/</link><pubDate>Sat, 18 Jun 2022 10:39:42 +0200</pubDate><author>0xNinja</author><guid>https://0xninja.fr/xchg-rax-rax/</guid><description>Or how to learn assembly optimization tricks.</description></item><item><title>üîé Creating a VM for fun - Part 2: C</title><link>https://0xninja.fr/c-vm/</link><pubDate>Mon, 09 May 2022 10:39:42 +0200</pubDate><author>0xNinja</author><guid>https://0xninja.fr/c-vm/</guid><description>The second part of my series on low-level learning journey, let&amp;rsquo;s build the VM in C this time!</description></item><item><title>üèåÔ∏è Binary golfing - Introduction</title><link>https://0xninja.fr/binary-golf/</link><pubDate>Fri, 15 Apr 2022 16:00:00 +0000</pubDate><author>0xNinja</author><guid>https://0xninja.fr/binary-golf/</guid><description>So tmp.out - once again - got me. Especially netspooky, wich wrote about golfing binaries. Instantly I was caught in golfing.
Binary golfing? Crafting the smallest binary which does a particular task.
Why someone would do this?
Learn about binary executables and format parsers Flex on muggles My notes on ELF format It is recommanded to code in assembly in order to manage your headers as you wish.
We can handcraft binaries, because GCC is a bit messy when compiling code and linking stuff.</description></item><item><title>üîé Creating a VM for fun - Part 1: ASM</title><link>https://0xninja.fr/assembly-vm/</link><pubDate>Thu, 17 Mar 2022 10:39:42 +0200</pubDate><author>0xNinja</author><guid>https://0xninja.fr/assembly-vm/</guid><description>The first part of my series on low-level learning journey, sit back, relax and enjoy me struggling for basic stuff.</description></item><item><title>üöÄ TL;DR - Git</title><link>https://0xninja.fr/tldr-git/</link><pubDate>Sun, 17 Oct 2021 10:39:42 +0200</pubDate><author>0xNinja</author><guid>https://0xninja.fr/tldr-git/</guid><description>You want to know how to use Git as a chad developper?</description></item><item><title>ü™õ Build your own mechanical keyboard</title><link>https://0xninja.fr/build-your-own-keyboard/</link><pubDate>Sat, 02 Oct 2021 13:00:28 +0200</pubDate><author>0xNinja</author><guid>https://0xninja.fr/build-your-own-keyboard/</guid><description>A simple and quick summary on how to build a mechnical keyboard on your own from scratch.</description></item><item><title>You want to start to pwn?</title><link>https://0xninja.fr/start-pwn/</link><pubDate>Wed, 01 Sep 2021 13:00:28 +0200</pubDate><author>0xNinja</author><guid>https://0xninja.fr/start-pwn/</guid><description>So you want to start to pwn, don&amp;rsquo;t you? Well, I did too! Those are my notes on the past year of binary exploitation.</description></item><item><title>How to install Archlinux</title><link>https://0xninja.fr/install-archlinux/</link><pubDate>Wed, 18 Aug 2021 11:06:28 +0200</pubDate><author>0xNinja</author><guid>https://0xninja.fr/install-archlinux/</guid><description>I recently installed once again Archlinux on a laptop. Let me explain how to do so.</description></item><item><title>üì¶ HTB - Previse</title><link>https://0xninja.fr/htb-previse/</link><pubDate>Wed, 11 Aug 2021 13:00:00 +0000</pubDate><author>0xNinja</author><guid>https://0xninja.fr/htb-previse/</guid><description>TL;DR Bypass PHP redirect to access restricted page, create low priv web account, get website backup. Audit code and find OS command injection + MySQL creds, get reverse shell and dump database, get password hash and crack it to SSH. Privesc via path injection.
Footholds nmap gives us only ports 22 and 80.
We first get this website:
Nothing we can deal with here, no SQL injection :(
For more info I used dirsearch to fuzz the web pages, and it found the following:</description></item></channel></rss>
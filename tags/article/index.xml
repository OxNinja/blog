<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>article - Tag - 0xNinja - My blog</title><link>https://0xninja.fr/tags/article/</link><description>article - Tag - 0xNinja - My blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 20 Aug 2020 14:00:01 +0000</lastBuildDate><atom:link href="https://0xninja.fr/tags/article/" rel="self" type="application/rss+xml"/><item><title>SQLi lab solutions</title><link>https://0xninja.fr/sqli-lab/</link><pubDate>Thu, 20 Aug 2020 14:00:01 +0000</pubDate><author>0xNinja</author><guid>https://0xninja.fr/sqli-lab/</guid><description>Some weeks ago I created a trainning lab for SQL injections called SQLi lab. And I will go through all levels in this blog post, explainning the expected way to solve each of them.
The lab currently contains 5 levels, and I will update this post as I add more of them üëç
Installation The GitHub repository is at https://github.com/OxNinja/SQLi-lab if you want more information.
First I clone the lab in a folder, add its IP to my hosts file for conveignance, and then build it with the given script:</description></item><item><title>Setup your database with Docker</title><link>https://0xninja.fr/setup-your-database-with-docker/</link><pubDate>Tue, 07 Apr 2020 17:30:00 +0000</pubDate><author>0xNinja</author><guid>https://0xninja.fr/setup-your-database-with-docker/</guid><description><![CDATA[Yeah, I wanted to do one of those for a long time üòÅ
So, we have to stay at home for the moment, I decided to make a &ldquo;walkthrough&rdquo; about something I used sometimes and I couldn&rsquo;t remember all the commands. So, let&rsquo;s build our MySQL database within a Docker container üê≥ !
Get the Docker image I will be using the mysql image from the Docker hub.
1 docker pull mysql Run the container For further details, you can read the official documentation for the image on Docker hub.]]></description></item><item><title>La vuln√©rabilit√© Shellshock</title><link>https://0xninja.fr/la-vuln%C3%A9rabilite-shellshock/</link><pubDate>Fri, 28 Feb 2020 11:30:00 +0000</pubDate><author>0xNinja</author><guid>https://0xninja.fr/la-vuln%C3%A9rabilite-shellshock/</guid><description><![CDATA[Shellshock est une vuln√©rabilit√© pr√©sente dans bash 4.3 et ant√©rieur. Il s&rsquo;agit d&rsquo;une vuln√©rabilit√© logicielle qui se base sur de l&rsquo;injection de commande en passant par les variables d&rsquo;environement. C&rsquo;est vachement cool car elle m√®ne √† une bonne grosse RCE des familles, donc c&rsquo;est pas n√©gligeable üòò.
Statistiques Quelques statistiques afin d&rsquo;illustrer la port√©e et l&rsquo;attention port√©e de la vuln√©rabilit√©.
Shellshock a beaucoup √©t√© √† la mode quand elle est sortie, √©norm√©ment de trafic a √©t√© g√©n√©r√© par des botnets lors de tentatives d&rsquo;exploitation de la vuln√©rabilit√©.]]></description></item></channel></rss>